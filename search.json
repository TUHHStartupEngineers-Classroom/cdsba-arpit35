[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website every time before you want to upload changes."
  },
  {
    "objectID": "content/01_journal/02_statistics.html",
    "href": "content/01_journal/02_statistics.html",
    "title": "Statistical Concepts",
    "section": "",
    "text": "Load the data variable:\n\n\nrandom_vars &lt;- readRDS(\"Causal_Data_Science_Data/random_vars.rds\")\nrandom_vars\n\n\n\n  \n\n\n\n\nTask 1\n\nFor each variable: age and income, computing the following values:\n\nExpected Value\n\n\nAge\n\n\nexpected_value_age &lt;- mean(random_vars$age)\npaste(\"Expected Value =\", expected_value_age)\n\n#&gt; [1] \"Expected Value = 33.471\"\n\n\n\nIncome\n\n\nexpected_value_income &lt;- mean(random_vars$income)\npaste(\"Expected Value =\", expected_value_income)\n\n#&gt; [1] \"Expected Value = 3510.731\"\n\n\n\nVariance\n\n\nAge\n\n\nvariance_age &lt;- var(random_vars$age)\npaste(\"Variance Value =\", variance_age)\n\n#&gt; [1] \"Variance Value = 340.607766766767\"\n\n\n\nIncome\n\n\nvariance_income &lt;- var(random_vars$income)\npaste(\"Variance Value =\", variance_income)\n\n#&gt; [1] \"Variance Value = 8625645.84448348\"\n\n\n\nStandard Deviation\n\n\nAge\n\n\nstandard_deviation_age &lt;- sd(random_vars$age)\npaste(\"Standard Deviation Value =\", standard_deviation_age)\n\n#&gt; [1] \"Standard Deviation Value = 18.4555619466536\"\n\n\n\nIncome\n\n\nstandard_deviation_income &lt;- sd(random_vars$income)\npaste(\"Standard Deviation Value =\", standard_deviation_income)\n\n#&gt; [1] \"Standard Deviation Value = 2936.94498492626\"\n\n\n\n\nTask 2\n\nCompare the standard deviations of age and income directly is not a good idea. This is because age and income are measured in different units, so comparing their standard deviations may not give us useful information. Standard deviations show how spread out the values are within each group (age or income), but they don’t allow for a straightforward comparison between the two groups.\n\n\nTask 3\n\n\nThe connection between two things using covariance and correlation:\n\n\nCovariance\n\n\ncovariance &lt;- cov(random_vars$age, random_vars$income)\npaste(\"Covariance =\", covariance)\n\n#&gt; [1] \"Covariance = 29700.1468458458\"\n\n\n\nCorrelation\n\n\ncorrelation &lt;- cor(random_vars$age, random_vars$income)\npaste(\"Correlation =\", correlation)\n\n#&gt; [1] \"Correlation = 0.547943162326477\"\n\n\n\n\nTask 4\n\n\nCovariance:\n\n\nCovariance indicates the extent to which two factors vary together, and this variation can be either positive, negative, or zero. The measurement scale of covariance is determined by multiplying the units of the two variables being studied. However, a drawback of covariance is its lack of standardization in scale, making it challenging to compare the strength of relationships between different pairs of variables.\n\n\nCorrelation:\n\n\nOn the other hand, correlation provides a standardized way of measuring the relationship between things, assigning a value between -1 and 1. A correlation of 1 indicates a flawless positive connection, -1 signifies a complete negative relationship, and 0 suggests no linear relationship. The standardized scale of correlation simplifies comparison and comprehension across various pairs of things. Due to its standardized scale, correlation is more straightforward to grasp compared to covariance, allowing for easy comparison of the strength and direction of relationships between different pairs of things.\n\n\nIn summary:\n\n\nIn general, correlation is more straightforward to comprehend and compare than covariance. This is because correlation provides a standardized measurement that falls within the range of -1 to 1. This standardized scale simplifies the understanding of the strength and direction of the relationship between two things. If your goal is to evaluate the connection between two variables without encountering difficulties related to scale, correlation is typically a preferable option over covariance.\n\n\n\nTask 5\n\n\nCompute the conditional expected values for the following:\n\n\n\\(E[income|age&lt;=18]\\):\n\n\nexpected_value_teens &lt;- mean(random_vars$income[random_vars$age &lt;= 18])\npaste(\"E[income|age &lt;= 18] =\", expected_value_teens)\n\n#&gt; [1] \"E[income|age &lt;= 18] = 389.607438016529\"\n\n\n\n\\(E[income|age\\in[18,65)]\\)\n\n\nexpected_value_adults &lt;- mean(random_vars$income[random_vars$age &gt;= 18 & random_vars$age &lt; 65])\npaste(\"E[income|age ∈ [18, 65]] =\", expected_value_adults)\n\n#&gt; [1] \"E[income|age ∈ [18, 65]] = 4685.73426573427\"\n\n\n\n\\(E[income|age&gt;=65]\\)\n\n\nexpected_value_seniors &lt;- mean(random_vars$income[random_vars$age &gt;= 65])\npaste(\"E[income|age &gt;= 65] =\", expected_value_seniors)\n\n#&gt; [1] \"E[income|age &gt;= 65] = 1777.23728813559\""
  },
  {
    "objectID": "content/01_journal/04_causality.html",
    "href": "content/01_journal/04_causality.html",
    "title": "Causality",
    "section": "",
    "text": "Task 1\n\n\nlibrary(tidyverse)\n# number of observations\nn &lt;- 100\n\n# Create tibble\nlm_dat &lt;- tibble(\n  # draw from normal distribution\n  cooking_time = rnorm(n, mean = 4, sd = 1),\n  # food_price depends on cooking_time and noise from normal distribution\n  food_price= 0.3*cooking_time + rnorm(n, 0, 0.1)\n)\n\n\nlm_dat\n\n\n\n  \n\n\n\n\nlibrary(ggplot2)\n\nggplot(lm_dat, aes(x = cooking_time, y = food_price)) +\n  geom_point() +\n  labs(title = \"Cooking Time vs. Food Price\",\n       x = \"The total time taken to cook the food\",\n       y = \"The price of the food\")"
  },
  {
    "objectID": "content/01_journal/09_iv.html",
    "href": "content/01_journal/09_iv.html",
    "title": "Instrumental Variables",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/07_matching.html",
    "href": "content/01_journal/07_matching.html",
    "title": "Matching and Subclassification",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/05_dag.html",
    "href": "content/01_journal/05_dag.html",
    "title": "Directed Acyclic Graphs",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/06_rct.html",
    "href": "content/01_journal/06_rct.html",
    "title": "Randomized Controlled Trials",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/08_did.html",
    "href": "content/01_journal/08_did.html",
    "title": "Difference-in-Differences",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/01_probability.html",
    "href": "content/01_journal/01_probability.html",
    "title": "Probability Theory",
    "section": "",
    "text": "Assignment 1\n\n\nGiven Probabilities - \\(P(S) = 0.3\\), \\(P(\\overline{S}) = 0.7\\), \\(P(T/S) = 0.2\\), \\(P(\\overline{T}/S) = 0.8\\), \\(P(T/\\overline{S}) = 0.6\\), \\(P(\\overline{T}/\\overline{S}) = 0.4\\)\n\n\n\\(P(T\\cap S) = P(S) * P(T/S)\\)\n\n\nP_T_and_S &lt;- 0.3 * 0.2\nP_T_and_S\n\n#&gt; [1] 0.06\n\n\n\n\\(P(T\\cap \\overline{S}) = P(\\overline{S}) * P(T/\\overline{S})\\)\n\n\nP_T_and_S_not &lt;- 0.7 * 0.6\nP_T_and_S_not\n\n#&gt; [1] 0.42\n\n\n\n\\(P(\\overline{T}\\cap S) = P(S) * P(\\overline{T}/S)\\)\n\n\nP_not_T_and_S &lt;- 0.3 * 0.8\nP_not_T_and_S\n\n#&gt; [1] 0.24\n\n\n\n\\(P(\\overline{T}\\cap \\overline{S}) = P(\\overline{S}) * P(\\overline{T}/\\overline{S})\\)\n\n\nP_not_T_and_S_not &lt;- 0.7 * 0.4\nP_not_T_and_S_not\n\n#&gt; [1] 0.28\n\n\n\nSum of all probabilities\n\n\nsum &lt;- P_T_and_S + P_T_and_S_not + P_not_T_and_S + P_not_T_and_S_not\nsum\n\n#&gt; [1] 1\n\n\n\n\nAssignment 2\n\n\nThe percentage of customers using all three devices = 0.5%\nThe percentage of customers using at least two devices = 7.3 + 3.3 + 8.8 + 0.5 = 19.9%\nThe percentage of customers using only one device = 42.3 + 27.8 + 10 = 80.1%\n\n\n\nAssignment 3\n\n\nGiven Probabilities - \\(P(B|A)=0.97\\)\n\\(P(B|\\overline{A})=0.01\\)\n\\(P(A)=0.04\\)\n\nBy Bayesian Theorem, \\(P(A|B) = \\frac{P(A|B)*P(A)}{P(B)} = \\frac{P(A|B)*P(A)}{P(B|A)*P(A)+P(B|\\overline{A})*P(\\overline{A})}\\)\n\nProbability that the product is not faulty\n\n\n\\(P(\\overline{A}|B)\\)\n\n\nP_A_not_given_B = (0.01*0.96)/((0.01*0.96)+(0.97*0.04))\nP_A_not_given_B_percentage = P_A_not_given_B * 100\n\npaste(\"Probability that the product is not faulty -\", P_A_not_given_B_percentage, \"%\")\n\n#&gt; [1] \"Probability that the product is not faulty - 19.8347107438017 %\"\n\n\n\nProbability that the product is faulty\n\n\n\\(P(A|B)\\)\n\n\nP_A_given_B = (0.97*0.04)/((0.01*0.96)+(0.97*0.04))\nP_A_given_B_percentage = P_A_given_B * 100\n\npaste(\"Probability that the product is faulty -\", P_A_given_B_percentage, \"%\")\n\n#&gt; [1] \"Probability that the product is faulty - 80.1652892561983 %\"\n\n\nThese results show that in case the alarm is triggered, there is a possibility of about 19.83% that the product is flawless and a probability of 80.17% that the product is faulty."
  },
  {
    "objectID": "content/01_journal/01_probability.html#header-2",
    "href": "content/01_journal/01_probability.html#header-2",
    "title": "Probability Theory",
    "section": "5.1 Header 2",
    "text": "5.1 Header 2\n\nHeader 3\n\nHeader 4\n\nHeader 5\n\nHeader 6"
  },
  {
    "objectID": "content/01_journal/03_regression.html",
    "href": "content/01_journal/03_regression.html",
    "title": "Regression and Statistical Inference",
    "section": "",
    "text": "Task 1\n\n\nLoading the data set\n\n\ndf &lt;- readRDS(\"Causal_Data_Science_Data/car_prices.rds\")\n\n\nChecking the dimensions of the dataset\n\n\ndimensions &lt;- dim(df)\npaste(\"Dimensions of the dataset =\", dimensions)\n\n#&gt; [1] \"Dimensions of the dataset = 181\" \"Dimensions of the dataset = 22\"\n\n\n\n\nTask 2\n\n\nhead(df)\n\n\n\n  \n\n\n# Show table\ndf\n\n\n\n  \n\n\n# Get glimpse of data\nglimpse(df)\n\n#&gt; Rows: 181\n#&gt; Columns: 22\n#&gt; $ aspiration       &lt;chr&gt; \"std\", \"std\", \"std\", \"std\", \"std\", \"std\", \"std\", \"std…\n#&gt; $ doornumber       &lt;chr&gt; \"two\", \"two\", \"two\", \"four\", \"four\", \"two\", \"four\", \"…\n#&gt; $ carbody          &lt;chr&gt; \"convertible\", \"convertible\", \"hatchback\", \"sedan\", \"…\n#&gt; $ drivewheel       &lt;chr&gt; \"rwd\", \"rwd\", \"rwd\", \"fwd\", \"4wd\", \"fwd\", \"fwd\", \"fwd…\n#&gt; $ enginelocation   &lt;chr&gt; \"front\", \"front\", \"front\", \"front\", \"front\", \"front\",…\n#&gt; $ wheelbase        &lt;dbl&gt; 88.6, 88.6, 94.5, 99.8, 99.4, 99.8, 105.8, 105.8, 105…\n#&gt; $ carlength        &lt;dbl&gt; 168.8, 168.8, 171.2, 176.6, 176.6, 177.3, 192.7, 192.…\n#&gt; $ carwidth         &lt;dbl&gt; 64.1, 64.1, 65.5, 66.2, 66.4, 66.3, 71.4, 71.4, 71.4,…\n#&gt; $ carheight        &lt;dbl&gt; 48.8, 48.8, 52.4, 54.3, 54.3, 53.1, 55.7, 55.7, 55.9,…\n#&gt; $ curbweight       &lt;dbl&gt; 2548, 2548, 2823, 2337, 2824, 2507, 2844, 2954, 3086,…\n#&gt; $ enginetype       &lt;chr&gt; \"dohc\", \"dohc\", \"ohcv\", \"ohc\", \"ohc\", \"ohc\", \"ohc\", \"…\n#&gt; $ cylindernumber   &lt;chr&gt; \"four\", \"four\", \"six\", \"four\", \"five\", \"five\", \"five\"…\n#&gt; $ enginesize       &lt;dbl&gt; 130, 130, 152, 109, 136, 136, 136, 136, 131, 131, 108…\n#&gt; $ fuelsystem       &lt;chr&gt; \"mpfi\", \"mpfi\", \"mpfi\", \"mpfi\", \"mpfi\", \"mpfi\", \"mpfi…\n#&gt; $ boreratio        &lt;dbl&gt; 3.47, 3.47, 2.68, 3.19, 3.19, 3.19, 3.19, 3.19, 3.13,…\n#&gt; $ stroke           &lt;dbl&gt; 2.68, 2.68, 3.47, 3.40, 3.40, 3.40, 3.40, 3.40, 3.40,…\n#&gt; $ compressionratio &lt;dbl&gt; 9.00, 9.00, 9.00, 10.00, 8.00, 8.50, 8.50, 8.50, 8.30…\n#&gt; $ horsepower       &lt;dbl&gt; 111, 111, 154, 102, 115, 110, 110, 110, 140, 160, 101…\n#&gt; $ peakrpm          &lt;dbl&gt; 5000, 5000, 5000, 5500, 5500, 5500, 5500, 5500, 5500,…\n#&gt; $ citympg          &lt;dbl&gt; 21, 21, 19, 24, 18, 19, 19, 19, 17, 16, 23, 23, 21, 2…\n#&gt; $ highwaympg       &lt;dbl&gt; 27, 27, 26, 30, 22, 25, 25, 25, 20, 22, 29, 29, 28, 2…\n#&gt; $ price            &lt;dbl&gt; 13495.00, 16500.00, 16500.00, 13950.00, 17450.00, 152…\n\nsummary(df, digits = 3)\n\n#&gt;   aspiration         doornumber          carbody           drivewheel       \n#&gt;  Length:181         Length:181         Length:181         Length:181        \n#&gt;  Class :character   Class :character   Class :character   Class :character  \n#&gt;  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n#&gt;                                                                             \n#&gt;                                                                             \n#&gt;                                                                             \n#&gt;  enginelocation       wheelbase       carlength      carwidth      carheight   \n#&gt;  Length:181         Min.   : 86.6   Min.   :141   Min.   :60.3   Min.   :47.8  \n#&gt;  Class :character   1st Qu.: 94.5   1st Qu.:166   1st Qu.:64.0   1st Qu.:52.0  \n#&gt;  Mode  :character   Median : 96.5   Median :173   Median :65.4   Median :53.7  \n#&gt;                     Mean   : 98.2   Mean   :173   Mean   :65.7   Mean   :53.6  \n#&gt;                     3rd Qu.:100.4   3rd Qu.:180   3rd Qu.:66.5   3rd Qu.:55.5  \n#&gt;                     Max.   :120.9   Max.   :208   Max.   :72.3   Max.   :59.8  \n#&gt;    curbweight    enginetype        cylindernumber       enginesize \n#&gt;  Min.   :1488   Length:181         Length:181         Min.   : 61  \n#&gt;  1st Qu.:2122   Class :character   Class :character   1st Qu.: 98  \n#&gt;  Median :2410   Mode  :character   Mode  :character   Median :120  \n#&gt;  Mean   :2521                                         Mean   :127  \n#&gt;  3rd Qu.:2910                                         3rd Qu.:141  \n#&gt;  Max.   :4066                                         Max.   :326  \n#&gt;   fuelsystem          boreratio        stroke     compressionratio\n#&gt;  Length:181         Min.   :2.54   Min.   :2.07   Min.   : 7.00   \n#&gt;  Class :character   1st Qu.:3.15   1st Qu.:3.08   1st Qu.: 8.50   \n#&gt;  Mode  :character   Median :3.31   Median :3.23   Median : 9.00   \n#&gt;                     Mean   :3.32   Mean   :3.23   Mean   : 8.85   \n#&gt;                     3rd Qu.:3.59   3rd Qu.:3.40   3rd Qu.: 9.40   \n#&gt;                     Max.   :3.94   Max.   :4.17   Max.   :11.50   \n#&gt;    horsepower     peakrpm        citympg       highwaympg       price      \n#&gt;  Min.   : 48   Min.   :4200   Min.   :13.0   Min.   :16.0   Min.   : 5118  \n#&gt;  1st Qu.: 70   1st Qu.:4800   1st Qu.:19.0   1st Qu.:25.0   1st Qu.: 7609  \n#&gt;  Median : 95   Median :5200   Median :24.0   Median :30.0   Median : 9980  \n#&gt;  Mean   :106   Mean   :5182   Mean   :24.8   Mean   :30.5   Mean   :12999  \n#&gt;  3rd Qu.:116   3rd Qu.:5500   3rd Qu.:30.0   3rd Qu.:34.0   3rd Qu.:16430  \n#&gt;  Max.   :288   Max.   :6600   Max.   :49.0   Max.   :54.0   Max.   :45400\n\n# Select only numeric columns\ndf_numeric &lt;- df[sapply(df, is.numeric)]\n\n# Calculate correlation matrix\ncor(df_numeric)\n\n#&gt;                    wheelbase   carlength   carwidth   carheight curbweight\n#&gt; wheelbase         1.00000000  0.86117385  0.7697984  0.54019069  0.7367123\n#&gt; carlength         0.86117385  1.00000000  0.8264703  0.44081316  0.8660053\n#&gt; carwidth          0.76979836  0.82647026  1.0000000  0.20488138  0.8480000\n#&gt; carheight         0.54019069  0.44081316  0.2048814  1.00000000  0.2141918\n#&gt; curbweight        0.73671231  0.86600528  0.8480000  0.21419176  1.0000000\n#&gt; enginesize        0.55411851  0.68017071  0.7431094 -0.02315796  0.8664640\n#&gt; boreratio         0.46436865  0.60094354  0.5515756  0.13853090  0.6382900\n#&gt; stroke            0.07182428  0.06571525  0.1143203 -0.15074728  0.1003967\n#&gt; compressionratio -0.25528942 -0.25098987 -0.2497246 -0.04784995 -0.3108351\n#&gt; horsepower        0.40436893  0.59890956  0.6971702 -0.09471443  0.8176250\n#&gt; peakrpm          -0.21992786 -0.19115857 -0.1086424 -0.15338356 -0.1596062\n#&gt; citympg          -0.58337119 -0.78122590 -0.7392601 -0.15044099 -0.8727123\n#&gt; highwaympg       -0.62686055 -0.78886402 -0.7501573 -0.18342575 -0.8873144\n#&gt; price             0.55547499  0.67307358  0.7430132  0.07452058  0.8340814\n#&gt;                   enginesize  boreratio      stroke compressionratio\n#&gt; wheelbase         0.55411851  0.4643687  0.07182428      -0.25528942\n#&gt; carlength         0.68017071  0.6009435  0.06571525      -0.25098987\n#&gt; carwidth          0.74310940  0.5515756  0.11432033      -0.24972464\n#&gt; carheight        -0.02315796  0.1385309 -0.15074728      -0.04784995\n#&gt; curbweight        0.86646404  0.6382900  0.10039673      -0.31083510\n#&gt; enginesize        1.00000000  0.5779073  0.18198111      -0.16132409\n#&gt; boreratio         0.57790729  1.0000000 -0.10077211      -0.19600019\n#&gt; stroke            0.18198111 -0.1007721  1.00000000      -0.30056815\n#&gt; compressionratio -0.16132409 -0.1960002 -0.30056815       1.00000000\n#&gt; horsepower        0.84661455  0.5917398  0.11169001      -0.22352509\n#&gt; peakrpm          -0.18477648 -0.2363817  0.06779511       0.15590249\n#&gt; citympg          -0.74373969 -0.6185363 -0.09158746       0.43789655\n#&gt; highwaympg       -0.75541425 -0.6086412 -0.07422008       0.44866322\n#&gt; price             0.88970342  0.5540692  0.03082326      -0.17646152\n#&gt;                   horsepower     peakrpm     citympg  highwaympg       price\n#&gt; wheelbase         0.40436893 -0.21992786 -0.58337119 -0.62686055  0.55547499\n#&gt; carlength         0.59890956 -0.19115857 -0.78122590 -0.78886402  0.67307358\n#&gt; carwidth          0.69717017 -0.10864244 -0.73926008 -0.75015733  0.74301316\n#&gt; carheight        -0.09471443 -0.15338356 -0.15044099 -0.18342575  0.07452058\n#&gt; curbweight        0.81762499 -0.15960618 -0.87271235 -0.88731441  0.83408139\n#&gt; enginesize        0.84661455 -0.18477648 -0.74373969 -0.75541425  0.88970342\n#&gt; boreratio         0.59173978 -0.23638175 -0.61853627 -0.60864116  0.55406923\n#&gt; stroke            0.11169001  0.06779511 -0.09158746 -0.07422008  0.03082326\n#&gt; compressionratio -0.22352509  0.15590249  0.43789655  0.44866322 -0.17646152\n#&gt; horsepower        1.00000000  0.08277528 -0.80612428 -0.77717065  0.84009827\n#&gt; peakrpm           0.08277528  1.00000000  0.02610522  0.05111792 -0.02085359\n#&gt; citympg          -0.80612428  0.02610522  1.00000000  0.97537685 -0.74198802\n#&gt; highwaympg       -0.77717065  0.05111792  0.97537685  1.00000000 -0.74079733\n#&gt; price             0.84009827 -0.02085359 -0.74198802 -0.74079733  1.00000000\n\n\n\nTo view the data type in the DataFrame.\n\n\nstr(df)\n\n#&gt; tibble [181 × 22] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ aspiration      : chr [1:181] \"std\" \"std\" \"std\" \"std\" ...\n#&gt;  $ doornumber      : chr [1:181] \"two\" \"two\" \"two\" \"four\" ...\n#&gt;  $ carbody         : chr [1:181] \"convertible\" \"convertible\" \"hatchback\" \"sedan\" ...\n#&gt;  $ drivewheel      : chr [1:181] \"rwd\" \"rwd\" \"rwd\" \"fwd\" ...\n#&gt;  $ enginelocation  : chr [1:181] \"front\" \"front\" \"front\" \"front\" ...\n#&gt;  $ wheelbase       : num [1:181] 88.6 88.6 94.5 99.8 99.4 ...\n#&gt;  $ carlength       : num [1:181] 169 169 171 177 177 ...\n#&gt;  $ carwidth        : num [1:181] 64.1 64.1 65.5 66.2 66.4 66.3 71.4 71.4 71.4 67.9 ...\n#&gt;  $ carheight       : num [1:181] 48.8 48.8 52.4 54.3 54.3 53.1 55.7 55.7 55.9 52 ...\n#&gt;  $ curbweight      : num [1:181] 2548 2548 2823 2337 2824 ...\n#&gt;  $ enginetype      : chr [1:181] \"dohc\" \"dohc\" \"ohcv\" \"ohc\" ...\n#&gt;  $ cylindernumber  : chr [1:181] \"four\" \"four\" \"six\" \"four\" ...\n#&gt;  $ enginesize      : num [1:181] 130 130 152 109 136 136 136 136 131 131 ...\n#&gt;  $ fuelsystem      : chr [1:181] \"mpfi\" \"mpfi\" \"mpfi\" \"mpfi\" ...\n#&gt;  $ boreratio       : num [1:181] 3.47 3.47 2.68 3.19 3.19 3.19 3.19 3.19 3.13 3.13 ...\n#&gt;  $ stroke          : num [1:181] 2.68 2.68 3.47 3.4 3.4 3.4 3.4 3.4 3.4 3.4 ...\n#&gt;  $ compressionratio: num [1:181] 9 9 9 10 8 8.5 8.5 8.5 8.3 7 ...\n#&gt;  $ horsepower      : num [1:181] 111 111 154 102 115 110 110 110 140 160 ...\n#&gt;  $ peakrpm         : num [1:181] 5000 5000 5000 5500 5500 5500 5500 5500 5500 5500 ...\n#&gt;  $ citympg         : num [1:181] 21 21 19 24 18 19 19 19 17 16 ...\n#&gt;  $ highwaympg      : num [1:181] 27 27 26 30 22 25 25 25 20 22 ...\n#&gt;  $ price           : num [1:181] 13495 16500 16500 13950 17450 ...\n\n\n\nWe have “chr” and “num” as data types in our dataset.\n\n\nNumbers and strings are different data types and they are treated differently.\n\n\nNumbers: These are numerical values that can be integers or doubles (for decimal numbers). You can perform arithmetic operations on numbers. For example, you can define a number as num &lt;- 10 or num &lt;- 10.5.\nStrings (Character): These are sequences of characters. Strings are used to store text data. You can perform operations like concatenation on strings, but you cannot perform arithmetic operations. You can define a string as str &lt;- “Hello, World!”\n\n\n\nTask 3\n\n\nlm_model &lt;- lm(price ~ ., data = df)\n\nsummary(lm_model)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ ., data = df)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients:\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16\n\n\nThe more ’*’ there are, the more important the factors are for the car’s price. Looking at the table, we can say these things really matter when it comes to deciding how much the car costs.\n\n\nTask 4\n\nI would like to select peakrpm as a Regressor.\n\nData Type: As observed in the linear regression summary, the peakrpm variable is of numeric type.\nImpact on Price: The coefficient for peakrpm is 2.526. This signifies that for every one-unit increase in size, the expected price increase is 2.526 units, while holding other variables constant.\nStatistical Significance: The p-value is remarkably low at 0.000108, suggesting high statistical significance. This implies that the influence of peakrpm on the Price is substantial.\n\n\n\nTask 5\n\n\nlibrary(dplyr)\n\ndf &lt;- mutate(df, seat_heating = TRUE)\n\nmodel &lt;- lm(price ~ . + seat_heating, data = df)\n\nsummary(model)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ . + seat_heating, data = df)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients: (1 not defined because of singularities)\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; seat_heatingTRUE             NA         NA      NA       NA    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16\n\n\nSince seat_heating is a binary variable with the same value for all observations, it will not have any predictive power in the model. The coefficient for seat_heating will be NA, and the t-value and p-value will also be NA. This is because a variable with a single value does not provide any information that can be used to predict the dependent variable."
  },
  {
    "objectID": "content/01_journal/10_rdd.html",
    "href": "content/01_journal/10_rdd.html",
    "title": "Regression Discontinuity",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  }
]